Basic Queries (Retrieving Data & Filtering):

- List all the names of the artists in the artists table.
- Find all tracks from the tracks table that have a UnitPrice greater than $0.99.
- Retrieve the FirstName, LastName, and Email of all customers from the customers table.
- What are the names of all the playlists in the playlists table?
- List all distinct cities where customers are located, from the BillingCity column in the invoices table.

Intermediate Queries (Joins & Grouping):
- Display the Name of each track and the Title of the album it belongs to. (Hint: Join tracks and albums tables)
- List the names of all tracks that belong to the 'Rock' genre. (Hint: Join tracks and genres tables)
- Show the InvoiceDate and total amount (UnitPrice * Quantity from invoice_items) for InvoiceId 10. (Hint: Join invoices and invoice_items)
- How many tracks are there in each playlist? Display the playlist Name and the count of tracks. (Hint: Join playlists, playlist_track, and use COUNT with GROUP BY)
- Find the names of all albums released by the artist 'Led Zeppelin'. (Hint: Join artists and albums)
- List the FirstName and LastName of employees and the FirstName and LastName of the employee they report to (their manager). (Hint: Self-join the employees table)

Advanced Queries (Subqueries, Complex Joins & Aggregations):
- Find the names of customers who have made at least one purchase (i.e., appear in the invoices table).
- List the top 5 most expensive tracks based on UnitPrice. Display the track Name and UnitPrice.
- For each genre, find the total number of tracks. Display Genre name and the track count.
- Which customers (list their FirstName and LastName) have a support representative with the Title of 'IT Staff'? (Hint: Join customers and employees tables)
- Calculate the total sales (sum of UnitPrice * Quantity) for each country listed in the invoices table (BillingCountry). Display the country and total sales.
- Find artists who have composed tracks in more than one genre. List the artist's Name. (Hint: This might require joining artists, albums, tracks, genres and using COUNT(DISTINCT GenreId) with GROUP BY and HAVING)